<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Ch-M.D - passwords</title><link href="http://blog.chmd.fr/" rel="alternate"></link><link href="http://blog.chmd.fr/feeds/passwords.atom.xml" rel="self"></link><id>http://blog.chmd.fr/</id><updated>2020-01-06T14:30:00+01:00</updated><entry><title>Scripting sudo with pass</title><link href="http://blog.chmd.fr/scripting-sudo-with-pass.html" rel="alternate"></link><published>2020-01-06T14:30:00+01:00</published><updated>2020-01-06T14:30:00+01:00</updated><author><name>Tof</name></author><id>tag:blog.chmd.fr,2020-01-06:/scripting-sudo-with-pass.html</id><summary type="html">&lt;p&gt;Like a lot of folks, I use &lt;a href="https://www.passwordstore.org/"&gt;zx2c4's pass&lt;/a&gt;. Like even more
people, I use sudo for administrative tasks on my machines. The obvious
advantage of pass is its scriptability. A lot of tools (&lt;a href="http://www.offlineimap.org/"&gt;offlineimap&lt;/a&gt;,
&lt;a href="https://github.com/docker/docker-credential-helpers"&gt;docker&lt;/a&gt;, &lt;a href="https://www.sudo.ws/man/1.8.15/sudoers.man.html"&gt;ansible-vault&lt;/a&gt;...) offer a way to provide the password
through an external command. This allows â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Like a lot of folks, I use &lt;a href="https://www.passwordstore.org/"&gt;zx2c4's pass&lt;/a&gt;. Like even more
people, I use sudo for administrative tasks on my machines. The obvious
advantage of pass is its scriptability. A lot of tools (&lt;a href="http://www.offlineimap.org/"&gt;offlineimap&lt;/a&gt;,
&lt;a href="https://github.com/docker/docker-credential-helpers"&gt;docker&lt;/a&gt;, &lt;a href="https://www.sudo.ws/man/1.8.15/sudoers.man.html"&gt;ansible-vault&lt;/a&gt;...) offer a way to provide the password
through an external command. This allows your passwords to be all in one
place, with no overhead in your workflow.&lt;/p&gt;
&lt;p&gt;If you want to run a sudo command without typing the password
interactively, you can use the &lt;a href="https://www.sudo.ws/man/1.8.15/sudoers.man.html"&gt;NOPASSWD&lt;/a&gt; option in &lt;code&gt;/etc/sudoers&lt;/code&gt;.  I
do not find it desirable: should you leave a console unattended, this
exposes you to somebody running administrative commands too easily.&lt;/p&gt;
&lt;p&gt;So can you instead tell sudo to use pass for the password input? Yes, but,
not seamlessly. The &lt;code&gt;-A&lt;/code&gt; &lt;a href="https://www.sudo.ws/man/1.8.3/sudo.man.html"&gt;command line option&lt;/a&gt; is designed to provide
the password through an helper program. To quote the manpage:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the -A (askpass) option is specified, a (possibly graphical) helper
program is executed to read the user's password and output the password
to the standard output. If the &lt;code&gt;SUDO_ASKPASS&lt;/code&gt; environment variable is set,
it specifies the path to the helper program.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I store in pass my different "&lt;code&gt;user@host&lt;/code&gt;" passwords under the path
&lt;code&gt;host/&amp;lt;user&amp;gt;@&amp;lt;host&amp;gt;&lt;/code&gt;. If you adopt the same convention, this is what you can
do:&lt;/p&gt;
&lt;p&gt;Save the following file as executable under &lt;code&gt;~/.local/bin/sudo-askpass&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
pass show hosts/&lt;span class="k"&gt;$(&lt;/span&gt;whoami&lt;span class="k"&gt;)&lt;/span&gt;@&lt;span class="k"&gt;$(&lt;/span&gt;hostname&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; head -n1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Insert your password in pass accordingly&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pass edit hosts/&lt;span class="k"&gt;$(&lt;/span&gt;whoami&lt;span class="k"&gt;)&lt;/span&gt;@&lt;span class="k"&gt;$(&lt;/span&gt;hostname&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And now if you run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;SUDO_ASKPASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.local/bin/sudo-askpass
sudo -A whoami
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The answer should be &lt;code&gt;root&lt;/code&gt;. Neat, but not seamless, since you need the -A
switch. You &lt;em&gt;could&lt;/em&gt; solve the problem by adding these 2 lines in your shell
startup file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;SUDO_ASKPASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.local/bin/sudo-askpass
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;sudo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sudo -A&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However, programs which invoke &lt;code&gt;sudo&lt;/code&gt; (such as &lt;a href="https://github.com/Jguer/yay"&gt;yay&lt;/a&gt;) will not know about
this alias, and you will still be required to type your password
interactively. What I do instead is to create my own sudo executable with
higher precedence in the path whicht insert the proper options before
invoking the real binary:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nv"&gt;SCRIPTDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;dirname &lt;span class="k"&gt;$(&lt;/span&gt;which &lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="k"&gt;))&lt;/span&gt;
&lt;span class="nv"&gt;PATH_WITHOUT_SCRIPTDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$PATH&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tr &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep -v &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$SCRIPTDIR&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; tr &lt;span class="s2"&gt;&amp;quot;\n&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;REAL_SUDO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;env &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PATH_WITHOUT_SCRIPTDIR&lt;/span&gt; which sudo&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;exec&lt;/span&gt; env &lt;span class="nv"&gt;SUDO_ASKPASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.local/bin/sudo-askpass &lt;span class="nv"&gt;$REAL_SUDO&lt;/span&gt; --askpass &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If your distribution follows the &lt;a href="http://man7.org/linux/man-pages/man7/file-hierarchy.7.html"&gt;systemd file hierarchy&lt;/a&gt;, you can save
this file under &lt;code&gt;~/.local/bin/sudo&lt;/code&gt; and it will happily take precedence
over the real sudo.&lt;/p&gt;
&lt;p&gt;I employ a similar trick for unlocking my ssh keys with keychain. I store
in pass the password of the private ssh key of &lt;code&gt;&amp;lt;user&amp;gt;@&amp;lt;host&amp;gt;&lt;/code&gt; as
&lt;code&gt;ssh/&amp;lt;user&amp;gt;@&amp;lt;host&amp;gt;&lt;/code&gt;. The following file is saved as executable under
&lt;code&gt;~/.local/bin/ssh-askpass&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
pass show ssh/&lt;span class="k"&gt;$(&lt;/span&gt;whoami&lt;span class="k"&gt;)&lt;/span&gt;@&lt;span class="k"&gt;$(&lt;/span&gt;hostname&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; head -n1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And this goes in my shell startup file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt; keychain &amp;gt; /dev/null&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt; ssh-askpass &amp;gt; /dev/null&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nb"&gt;source&lt;/span&gt; &amp;lt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;SSH_ASKPASS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ssh-askpass keychain --quiet --eval id_rsa &amp;lt;/dev/null&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you have a look at my &lt;a href="https://github.com/chmduquesne/dotfiles"&gt;dotfiles&lt;/a&gt;, you will realize that there is
more to this setup. The main additional thing to know is that I use a
&lt;a href="https://www.yubico.com/"&gt;smartcard&lt;/a&gt; to handle the gpg decryption, so that no machine contains
the gpg key that I use with &lt;code&gt;pass&lt;/code&gt;. This will likely be the purpose of a
different article. Until then, happy sudo-ing!&lt;/p&gt;</content><category term="passwords"></category><category term="shell"></category></entry></feed>